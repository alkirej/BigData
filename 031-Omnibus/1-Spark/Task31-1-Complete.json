{"paragraphs":[{"text":"// IMPORTS\nimport org.apache.spark.SparkContext\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.sql.{DataFrame, SparkSession}\nimport org.apache.spark.storage.StorageLevel\nimport spark.sql\nimport org.apache.spark.broadcast.Broadcast\n","dateUpdated":"2020-02-19T23:26:00+0000","config":{"colWidth":12,"results":{},"enabled":true,"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.SparkContext\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.sql.{DataFrame, SparkSession}\nimport spark.implicits._\nimport org.apache.spark.storage.StorageLevel\nimport spark.sql\nimport org.apache.spark.broadcast.Broadcast\n"}]},"apps":[],"jobName":"paragraph_1582143805846_-935798625","id":"20200219-191309_1615538803","dateCreated":"2020-02-19T20:23:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9762","user":"anonymous","dateFinished":"2020-02-19T23:19:19+0000","dateStarted":"2020-02-19T23:19:16+0000"},{"text":"// CREATE SPARK SESSION AND CONTEXT OBJECTS\nval spark = SparkSession\n      .builder()\n      .appName(\"Task-31\")\n      .master(\"local[*]\")\n      .config(\"spark.sql.warehouse.dir\", \"/apps/hive/warehouse\")\n      .config(\"hive.metastore.uris\", \"thrift://localhost:9083\")\n      .enableHiveSupport()\n      .getOrCreate()\nval sc: SparkContext = spark.sparkContext\n","dateUpdated":"2020-02-19T23:14:26+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"spark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@36d0694c\nsc: org.apache.spark.SparkContext = org.apache.spark.SparkContext@76fc73cb\n"}]},"apps":[],"jobName":"paragraph_1582143805847_-936183373","id":"20200219-191031_2063451605","dateCreated":"2020-02-19T20:23:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9763","user":"anonymous","dateFinished":"2020-02-19T23:14:27+0000","dateStarted":"2020-02-19T23:14:26+0000"},{"text":"// SAMPLE SQL QUERY FOR TESTING\nspark.sqlContext.sql( \"USE movielens_db\" )\nsql(\"SHOW TABLES\").show()","dateUpdated":"2020-02-19T23:14:36+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res509: org.apache.spark.sql.DataFrame = []\n+------------+----------+-----------+\n|    database| tableName|isTemporary|\n+------------+----------+-----------+\n|movielens_db|      data|      false|\n|movielens_db|     genre|      false|\n|movielens_db|     movie|      false|\n|movielens_db|occupation|      false|\n|movielens_db|       usr|      false|\n+------------+----------+-----------+\n\n"}]},"apps":[],"jobName":"paragraph_1582143805847_-936183373","id":"20200219-191513_2008705198","dateCreated":"2020-02-19T20:23:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9764","user":"anonymous","dateFinished":"2020-02-19T23:14:36+0000","dateStarted":"2020-02-19T23:14:36+0000"},{"text":"// CREATE RDD FROM SQL QUERY AND TRANSFORM IT A FEW TIMES\n\nval test   =       sql( \"SELECT * FROM genre\" ).rdd\n// return from query leaves us with unknown data types\nval mTest  =  test.map( row => ( row.getAs[String](0), row.getAs[Int](1), 0, \"notes\") )\n// return from map leavs us with known types\nval m2Test = mTest.map( row => ( row._1, row._2, row._2*(row._2-2), row._4 +\"-\"+row._1 ))\nval oTest  = m2Test.sortBy(_._1, ascending=true)","dateUpdated":"2020-02-19T23:14:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"test: org.apache.spark.rdd.RDD[org.apache.spark.sql.Row] = MapPartitionsRDD[549] at rdd at <console>:108\nmTest: org.apache.spark.rdd.RDD[(String, Int, Int, String)] = MapPartitionsRDD[550] at map at <console>:109\nm2Test: org.apache.spark.rdd.RDD[(String, Int, Int, String)] = MapPartitionsRDD[551] at map at <console>:109\noTest: org.apache.spark.rdd.RDD[(String, Int, Int, String)] = MapPartitionsRDD[556] at sortBy at <console>:108\n"}]},"apps":[],"jobName":"paragraph_1582143805847_-936183373","id":"20200219-191719_580308054","dateCreated":"2020-02-19T20:23:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9765","user":"anonymous","dateFinished":"2020-02-19T23:14:44+0000","dateStarted":"2020-02-19T23:14:42+0000"},{"text":"oTest.toDebugString","dateUpdated":"2020-02-19T23:14:49+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res515: String =\n(2) MapPartitionsRDD[556] at sortBy at <console>:108 []\n |  ShuffledRDD[555] at sortBy at <console>:108 []\n +-(2) MapPartitionsRDD[552] at sortBy at <console>:108 []\n    |  MapPartitionsRDD[551] at map at <console>:109 []\n    |  MapPartitionsRDD[550] at map at <console>:109 []\n    |  MapPartitionsRDD[549] at rdd at <console>:108 []\n    |  MapPartitionsRDD[548] at rdd at <console>:108 []\n    |  MapPartitionsRDD[547] at rdd at <console>:108 []\n    |  MapPartitionsRDD[546] at  []\n    |  MapPartitionsRDD[545] at  []\n    |  HadoopRDD[544] at  []\n"}]},"apps":[],"jobName":"paragraph_1582143805847_-936183373","id":"20200219-193545_277909838","dateCreated":"2020-02-19T20:23:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9766","user":"anonymous","dateFinished":"2020-02-19T23:14:50+0000","dateStarted":"2020-02-19T23:14:50+0000"},{"user":"anonymous","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"},"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1582146786740_143836840","id":"20200219-211306_1751237695","dateCreated":"2020-02-19T21:13:06+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10739","text":"oTest.toDebugString","dateUpdated":"2020-02-19T21:13:06+0000"},{"dateUpdated":"2020-02-19T23:14:53+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1582143805847_-936183373","id":"20200219-201404_1681975743","dateCreated":"2020-02-19T20:23:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9767","text":"// CREATE A CHECKPOINT OF THE RDD\n\nsc.setCheckpointDir(\"hdfs://sandbox-hdp.hortonworks.com:8020/RddCheckPoint\")\noTest.checkpoint\n\n// Checkpoint isn't created until an action occurs\nval o2Test = oTest.sortBy( _._3, ascending=true)\no2Test.toDebugString","user":"anonymous","dateFinished":"2020-02-19T23:14:55+0000","dateStarted":"2020-02-19T23:14:53+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"o2Test: org.apache.spark.rdd.RDD[(String, Int, Int, String)] = MapPartitionsRDD[562] at sortBy at <console>:110\nres522: String =\n(2) MapPartitionsRDD[562] at sortBy at <console>:110 []\n |  ShuffledRDD[561] at sortBy at <console>:110 []\n +-(2) MapPartitionsRDD[557] at sortBy at <console>:110 []\n    |  MapPartitionsRDD[556] at sortBy at <console>:108 []\n    |  ReliableCheckpointRDD[560] at sortBy at <console>:110 []\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1582145602332_-1174938417","id":"20200219-205322_894872343","dateCreated":"2020-02-19T20:53:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10179","text":"// CACHE / PERSIST\n//o2Test.persist(StorageLevel.MEMORY_ONLY)\no2Test.cache\nval o3Test = o2Test.sortBy( _._3 )\no3Test.toDebugString","dateUpdated":"2020-02-19T23:14:57+0000","dateFinished":"2020-02-19T23:14:58+0000","dateStarted":"2020-02-19T23:14:57+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res525: o2Test.type = MapPartitionsRDD[562] at sortBy at <console>:110\no3Test: org.apache.spark.rdd.RDD[(String, Int, Int, String)] = MapPartitionsRDD[567] at sortBy at <console>:108\nres526: String =\n(2) MapPartitionsRDD[567] at sortBy at <console>:108 []\n |  ShuffledRDD[566] at sortBy at <console>:108 []\n +-(2) MapPartitionsRDD[563] at sortBy at <console>:108 []\n    |  MapPartitionsRDD[562] at sortBy at <console>:110 []\n    |      CachedPartitions: 2; MemorySize: 3.6 KB; ExternalBlockStoreSize: 0.0 B; DiskSize: 0.0 B\n    |  ShuffledRDD[561] at sortBy at <console>:110 []\n    +-(2) MapPartitionsRDD[557] at sortBy at <console>:110 []\n       |  MapPartitionsRDD[556] at sortBy at <console>:108 []\n       |  ReliableCheckpointRDD[560] at sortBy at <console>:110 []\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1582145913544_-765136511","id":"20200219-205833_1035252102","dateCreated":"2020-02-19T20:58:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10343","text":"// NOTE: CLASS THAT CREATES \"UDFs\" OR OTHERWISE WRITES VARIABLES INTO EXECUTOR CODE MUST BE SERIALIZABLE\nclass Test extends Serializable {\n    def trying(): Unit = {   \n        val intTable: List[Int] = List[Int]( 10, 8, 9, 4, 1, 7, 2, 3, 5, 6 )\n        val btRdd = sc.parallelize( intTable )\n        val bcValue:Broadcast[Int] = sc.broadcast( 5 )\n\n        btRdd.map( x => x * bcValue.value ).take(10).foreach(println)\n    } // def\n} // class\n\nval blue: Test = new Test\nblue.trying\n","dateUpdated":"2020-02-19T23:15:00+0000","dateFinished":"2020-02-19T23:15:01+0000","dateStarted":"2020-02-19T23:15:00+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class Test\nwarning: previously defined object Test is not a companion to class Test.\nCompanions must be defined together; you may wish to use :paste mode for this.\nblue: Test = Test@4b426e56\n50\n40\n45\n20\n5\n35\n10\n15\n25\n30\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1582145920626_1153221505","id":"20200219-205840_353514518","dateCreated":"2020-02-19T20:58:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10415","text":"// USE EXPLICITS TO TURN SCALA SEQUENCES INTO DATAFRAMES\nimport spark.implicits._\nval list: List[String] = List[String](\"hello\", \"goodbye\" )\nlist.toDF.take(2)\n","dateUpdated":"2020-02-19T23:33:10+0000","dateFinished":"2020-02-19T23:33:12+0000","dateStarted":"2020-02-19T23:33:10+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import spark.implicits._\nlist: List[String] = List(hello, goodbye)\nres547: Array[org.apache.spark.sql.Row] = Array([hello], [goodbye])\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1582145923198_1306751641","id":"20200219-205843_1755254323","dateCreated":"2020-02-19T20:58:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10487","text":"int (\"hello\" )","dateUpdated":"2020-02-19T23:29:44+0000","dateFinished":"2020-02-19T20:58:47+0000","dateStarted":"2020-02-19T20:58:47+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"hello"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1582145927169_-1378041509","id":"20200219-205847_2020056971","dateCreated":"2020-02-19T20:58:47+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10559"}],"name":"Task31","id":"2F2WPPH7F","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}