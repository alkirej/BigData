-- SETUP (IF NECESSARY)
mysql -u maria_dev -pmariadev
CREATE USER jeff;
GRANT ALL PRIVILEGES ON *.* TO jeff;

CREATE DATABASE task31;
USE task31;

-- CROSS JOIN
create table cross_join( id int, name varchar(20) );

insert into cross_join( 1, "Sally" );
insert into cross_join( 2, "Suzy" );
insert into cross_join( 3, "Billy" );
insert into cross_join( 4, "John" );

-- Self join AND Cross join (cross join = cartesian product)
select * from cross_join a, cross_join b;


-- SELF JOIN
create table person ( id int, name varchar(20), mom int, dad int );
insert into person (id, name ) values ( 1, 'Adam' );
insert into person (id, name ) values ( 2, 'Eve' );
insert into person (id, name, mom, dad) values ( 3, 'Cain', 2, 1 );
insert into person (id, name, mom, dad) values ( 4, 'Abel', 2, 1 );
insert into person (id, name, mom, dad) values ( 5, 'Bekah', 2, 1 );
insert into person (id, name, mom, dad) values ( 6, 'Bekah Jr.', 3, 5 );
insert into person (id, name, mom, dad) values ( 7, 'Seth', 2, 1 );

-- Self join - retreive all children of Eve
select pa.name as mother, ch.name child from person ch, person pa where pa.id=ch.mom and pa.id=2;

-- SQL WINDOW(ing) FUNCTIONS
CREATE TABLE sales( year int, month int, product varchar(20), price int );
INSERT INTO sales (year,month,product,price) VALUES (2015, 6, 'Hadoop', 100);
INSERT INTO sales (year,month,product,price) VALUES (2014, 8, 'Hadoop', 75);
INSERT INTO sales (year,month,product,price) VALUES (2018, 12, 'Hadoop', 75);
INSERT INTO sales(year,month,product,price) VALUES (2015, 6, "ZooKeeper", 5);

-- standard OVER clause
WITH cte_mo_sales(year,month,product,sales) AS
    ( SELECT year,month,product,SUM(price) AS sales 
      FROM sales 
      GROUP BY year,month,product 
      ORDER BY year,month
    )
SELECT year, 
       month, 
       product, 
       sales, 
       AVG(sales) OVER (PARTITION BY year,month) AS 'Avg Sales' 
FROM cte_mo_sales;

-- LAG (previous record) with OVER
WITH cte_mo_sales(year,month,product,sales) AS 
  ( SELECT year,month,product,SUM(price) AS sales 
    FROM sales GROUP BY year,month,product 
    ORDER BY year,month
  )  
SELECT year, month, product, sales, 
       LAG(product) OVER (PARTITION BY year) AS 'Last Product' 
FROM cte_mo_sales;

-- LAG  = from last row of query
-- LEAD = from next row of query
